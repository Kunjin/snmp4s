package org.snmp4s

import org.snmp4j.PDU
import org.snmp4j.smi.{ VariableBinding, Variable }

class SnmpSync(params:SnmpParams) extends SnmpSyncGuts(params) {
[#  def get[[#A1 <: Readable, T1#]]
    ([#obj1:DataObject[A1, T1]#])
    (implicit [#m1:Manifest[T1]#]):
    Either[SnmpError,([#T1#])] = 
  {
    def pack = { pdu: PDU =>
[#      pdu.add(new VariableBinding(obj1.oid))#
]
      pdu
    }
    def unpack = { vs:Seq[Variable] => (
      [#cast(obj1, vs(0), m1)#]
    )}
    
    doGet(pack, unpack)
  }
#
]

[#  def set[[#A1 <: Writable, T1#]]
    ([#vb1:VarBind[A1, T1]#])
    (implicit [#m1:Manifest[T1]#]):
    Option[SnmpError] = 
  {
    def pack = { pdu:PDU =>
[#      pdu.add(new VariableBinding(vb1.obj.oid, toVariable(vb1.obj, vb1.v)))#
]
      pdu
    }
    
    doSet(pack)
  }
#
]

}
